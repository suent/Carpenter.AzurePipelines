#    Carpenter.AzurePipelines
#
#    Common YAML templates and scripts for Azure Pipelines definitions.
#
#
#    Copyright Â© 2015-2022 Suent Networks, All rights reserved.
#
#    Permission is hereby granted, free of charge, to any person obtaining a copy
#    of this software and associated documentation files (the "Software"), to deal
#    in the Software without restriction, including without limitation the rights
#    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#    copies of the Software, and to permit persons to whom the Software is
#    furnished to do so, subject to the following conditions:
#
#    The above copyright notice and this permission notice shall be included in all
#    copies or substantial portions of the Software.
#
#    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#    SOFTWARE.

# SPDX-License-Identifier: MIT


# Note: This build uses the pipeline templates directly to avoid getting into a
# state where the deployed pipeline does not work and a fix cannot be deployed.

parameters:
  # The build reason if a build is manually run. This value gets overridden by automated builds.
- name: pipelineReason
  displayName: 'Pipeline Reason'
  type: string
  default: CI
  values:
  - CI
  - Prerelease
  - Release

  # The prerelease label. This value is only used if pipelineReason is Prerelease.
- name: prereleaseLabel
  displayName: 'Prerelease Label'
  type: string
  default: alpha
  values:
  - alpha
  - beta
  - RC


# Default name for the build, prior to build versioning
# $(Build.BuildId) is the default value used when YAML cannot be parsed
name: $(Build.BuildId)


# Configure trigger and pr
trigger:
  batch: false
  branches:
    exclude:
    - dev/*
    - stack/*
pr:
  autoCancel: true  # allow github to cancel builds that are no longer relevant.
                    # for example: a PR build, where the PR has been updated


# Infrastructure variables
variables:

  # See docs/configuration.md for variable documentation.

- name: Carpenter.Project
  value: Carpenter.AzurePipelines

#- name: Carpewnter.Solution.Path
#  value: $(Carpenter.Project.Path)/Solution.sln

- name: Carpenter.Version.RevisionOffset
  value: 258

#- name: Carpenter.Version.VersionFile
#  value: VERSION

# Infrastructure populates:
#   Carpenter.PipelineBot
#   Carpenter.PipelineBot.Email
#   Carpenter.PipelineBot.Name
- group: Infrastructure

# Infrastructure-Vault populates:
#   PipelineBot-AzureDevOps-PAT
#   PipelineBot-GitHub-PAT
#   PipelineBot-NuGet-PAT
- group: Infrastructure-Vault


# Use pipeline template
stages:
- template: templates/carpenter-default.yml
  parameters:

    # See docs/configuration.md for parameter documentation.

    pipelineVersion: 1
    pipelineOperations:
    - ExcludePipeline
    - PublishSourceArtifact
    - VersionSemVer
    - BuildDotNet
    - PackageNuGet
    - TestDotNet
    - CollectTestCoverage
    - AnalyzeSonar
    - IncrementVersionOnRelease
    pipelineReason: ${{ parameters.pipelineReason }}

    defaultPoolType: 'Private'
    #defaultPoolVMImage: 'ubuntu-latest'
    defaultPoolName: 'Default'
    defaultPoolDemands:
    - Agent.OS -equals Linux
    - Agent.OSArchitecture -equals X64

    prereleaseLabel: ${{ parameters.prereleaseLabel }}

    buildDotNet: true
    executeUnitTests: true
    sonarCloud: true
    sonarCloudOrganization: suent
    sonarCloudProjectKey: Suent_Carpenter.AzurePipelines
    sonarCloudServiceConnection: SonarCloudAnalysis1
    deployBranch: 'test1,test2,stage,prod'
    deployNuGet: 'dev,stage,prod'
    nuGetTargetFeedDev: AzureArtifacts
    #nuGetTargetFeedTest1:
    #nuGetTargetFeedTest2:
    nuGetTargetFeedStage: github.com
    nuGetTargetFeedProd: nuget.org
    updateNuGetQuality: 'stage,prod'
    nuGetQualityFeed: suent
    #nuGetQualityDev:
    #nuGetQualityTest1:
    #nuGetQualityTest2:
    nuGetQualityStage: Prerelease
    nuGetQualityProd: Release
    gitHubServiceConnection: botRepositoryAccess
    addGitTagOnDevMain: true
    addGitHubReleaseOnProd: true
