#    Carpenter.AzurePipelines
#
#    Common YAML templates and scripts for Azure Pipelines definitions.
#
#
#    Copyright © 2015-2022 Suent Networks, All rights reserved.
#
#    Permission is hereby granted, free of charge, to any person obtaining a copy
#    of this software and associated documentation files (the "Software"), to deal
#    in the Software without restriction, including without limitation the rights
#    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#    copies of the Software, and to permit persons to whom the Software is
#    furnished to do so, subject to the following conditions:
#
#    The above copyright notice and this permission notice shall be included in all
#    copies or substantial portions of the Software.
#
#    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#    SOFTWARE.

# SPDX-License-Identifier: MIT


parameters:

  # See docs/parameters.md for parameter documentation.

- name: pipelineVersion
  type: number

- name: includePipeline
  type: boolean

- name: pipelineReason
  type: string

- name: defaultPoolType
  type: string

- name: defaultPoolName
  type: string

- name: defaultPoolDemands
  type: object

- name: defaultPoolVMImage
  type: string

- name: versionType
  type: string

- name: incrementVersionOnRelease
  type: string

- name: sonarCloud
  type: string

- name: deployNuGet
  type: string

- name: updateNuGetQuality
  type: string

- name: stack
  type: string

- name: jobDependsOn
  type: object

- name: gitHubServiceConnection
  type: string

- name: addGitTagOnDevMain
  type: string

- name: addGitHubReleaseOnProd
  type: string


jobs:
- job: 'finalize_${{ parameters.stack }}'
  displayName: 'Finalize'


  ${{ if ne(parameters.jobDependsOn,'') }}:
    dependsOn: ${{ parameters.jobDependsOn }}


  pool:
    ${{ if eq(parameters.defaultPoolType,'Hosted') }}:
      vmImage: ${{ parameters.defaultPoolVMImage }}
    ${{ if eq(parameters.defaultPoolType,'Private') }}:
      name: ${{ parameters.defaultPoolName }}
      ${{ if gt(length(parameters.defaultPoolDemands),0) }}:
        demands: ${{ parameters.defaultPoolDemands }}


  workspace:
    clean: all


  ${{ if eq(parameters.stack,'dev') }}:
    variables:
    - template: ../variable/carpenter-dev.yml
      parameters:
        pipelineReason: ${{ parameters.pipelineReason }}
        defaultPoolType: ${{ parameters.defaultPoolType }}
        versionType: ${{ parameters.versionType }}
        buildDotNet: ${{ parameters.buildDotNet }}
        sonarCloud: ${{ parameters.sonarCloud }}
        deployNuGet: ${{ parameters.deployNuGet }}
        updateNuGetQuality: ${{ parameters.updateNuGetQuality }}
        gitHubServiceConnection: ${{ parameters.gitHubServiceConnection }}


  steps:
  # Include pipeline for access to pipeline scripts
  - ${{ if ne(parameters.includePipeline, 'true') }}:
    - checkout: self
  - ${{ if eq(parameters.includePipeline, 'true') }}:
    - checkout: Carpenter

  - template: ../step/no-source-scriptpath.yml     
  - template: ../step/display-environment.yml

  - ${{ if and(eq(parameters.addGitTagOnDevMain,'true'),eq(variables['Build.SourceBranch'],'refs/heads/main'),eq(parameters.stack,'dev')) }}:
    - task: PowerShell@2
      inputs:
        targetType: 'filePath'
        filePath: $(Carpenter.Pipeline.ScriptPath)/AddGitTags.ps1
        arguments: -Verbose
      env:
        CARPENTER_PIPELINEBOT_TOKENSECRET: $(PipelineBot-GitHub-PAT)
      displayName: Add Git tags

  - ${{ if and(eq(parameters.addGitHubReleaseOnProd,'true'),eq(parameters.stack,'prod')) }}:
    - task: GitHubRelease@0
      inputs:
        gitHubConnection: ${{ parameters.gitHubServiceConnection }}
        repositoryName: '$(Build.Repository.Name)'
        action: create
        target: '$(Build.SourceVersion)'
        tagSource: manual
        tag: 'v$(Carpenter.Version)'
        title: 'v$(Carpenter.Version)'
        ${{ if eq(parameters.pipelineReason,'Prerelease') }}:
          isPreRelease: true
        addChangeLog: true
      displayName: Add GitHub Release
  
  - ${{ if and(eq(variables['Build.SourceBranch'],'refs/heads/main'),eq(parameters.stack,'dev'), ne(parameters.versionType, 'None'), eq(parameters.pipelineReason, 'Release'), eq(parameters.incrementVersionOnRelease, 'true')) }}:
    - task: PowerShell@2
      inputs:
        targetType: 'filePath'
        filePath: $(Carpenter.Pipeline.ScriptPath)/IncrementVersion.ps1
        arguments: -Verbose
      displayName: Update project version
      env:
        CARPENTER_PIPELINEBOT_TOKENSECRET: $(PipelineBot-GitHub-PAT)

  - powershell: |
      "##vso[build.addbuildtag]Deployed-${{ parameters.stack }}"
    displayName: Add Deployed tag
