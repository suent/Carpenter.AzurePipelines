# carpenter-pipeline.yml
# Contains variables used by the Carpenter pipeline.

#    Copyright © 2015-2021 Suent Networks, All rights reserved.
#
#    Permission is hereby granted, free of charge, to any person obtaining a copy
#    of this software and associated documentation files (the "Software"), to deal
#    in the Software without restriction, including without limitation the rights
#    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#    copies of the Software, and to permit persons to whom the Software is
#    furnished to do so, subject to the following conditions:
#
#    The above copyright notice and this permission notice shall be included in all
#    copies or substantial portions of the Software.
#
#    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#    SOFTWARE.

# SPDX-License-Identifier: MIT


parameters:
  # See template/carpenter-default.yml
- name: revisionOffset
  type: string
  default: 1


variables:
- name: Carpenter.Version.RevisionOffset
  value: ${{ parameters.revisionOffset }}

- name: Carpenter.Version.Revision
  value: $[counter(variables['Carpenter.Project'], variables['Carpenter.Version.RevisionOffset'])]


- ${{ if or(eq(variables['Build.Reason'],'IndividualCI'), eq(variables['Build.Reason'],'BatchedCI'), and(eq(variables['Build.Reason'],'Manual'), eq(variables['Carpenter.Build.Type'],'Manual'))) }}:
  - name: Carpenter.ContinuousIntegration.Date
    value: $[ format('{0:yyyyMMdd}', pipeline.startTime) ]

  - name: Carpenter.ContinuousIntegration.Revision
    value: $[ counter(variables['Carpenter.ContinuousIntegration.Date'],1) ]

- ${{ if eq(variables['Build.Reason'],'PullRequest') }}:
  - name: Carpenter.PullRequest.Semantic
    value: $[ format('{0}.{1}', variables['Build.Reason'], variables['System.PullRequest.PullRequestNumber']) ]

  - name: Carpenter.PullRequest.Revision
    value: $[ counter(variables['Carpenter.PullRequest.Semantic'], 1) ]
