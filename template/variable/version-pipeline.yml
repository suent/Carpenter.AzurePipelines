parameters:
  # See template/carpenter-default.yml
- name: buildType
  type: string
    
variables:

- name: Carpenter.Version.Type
  value: $[ dependencies.initializePipeline.outputs['initializeBuildVersion.versionType'] ]

- ${{ if ne(parameters.versionType,'None') }}:

  - name: Carpenter.Version.VersionFile
    value:  $[ dependencies.initializePipeline.outputs['initializeBuildVersion.versionFile'] ]

  - name: Carpenter.Version.VersionFilePath
    value:  $[ dependencies.initializePipeline.outputs['initializeBuildVersion.versionFilePath'] ]

  - name: Carpenter.Version.RevisionOffset
    value:  $[ dependencies.initializePipeline.outputs['initializeBuildVersion.revisionOffset'] ]

  - name: Carpenter.Version.BaseVersion
    value: $[ dependencies.initializePipeline.outputs['initializeBuildVersion.baseVersion'] ]

  - name: Carpenter.Version.Major
    value: $[ dependencies.initializePipeline.outputs['initializeBuildVersion.majorVersion'] ]

  - name: Carpenter.Version.Minor
    value: $[ dependencies.initializePipeline.outputs['initializeBuildVersion.minorVersion'] ]

  - name: Carpenter.Version.Patch
    value: $[ dependencies.initializePipeline.outputs['initializeBuildVersion.patchVersion'] ]

  - name: Carpenter.Version.Revision
    value:  $[ dependencies.initializePipeline.outputs['initializeBuildVersion.revision'] ]

  - ${{ if or(eq(variables['Build.Reason'],'IndividualCI'), eq(variables['Build.Reason'],'BatchedCI'), and(eq(variables['Build.Reason'],'Manual'), eq(parameters['buildType'],'CI'))) }}:
    - name: Carpenter.ContinuousIntegration.Date
      value: $[ dependencies.initializePipeline.outputs['initializeBuildVersion.continuousIntegrationDate'] ]

    - name: Carpenter.ContinuousIntegration.Revision
      value: $[ dependencies.initializePipeline.outputs['initializeBuildVersion.continuousIntegrationRevision'] ]

  - ${{ if eq(variables['Build.Reason'],'PullRequest') }}:
    - name: Carpenter.PullRequest.Semantic
      value: $[ dependencies.initializePipeline.outputs['initializeBuildVersion.pullRequestSemantic'] ]

    - name: Carpenter.PullRequest.Revision
      value: $[ dependencies.initializePipeline.outputs['initializeBuildVersion.pullRequestRevision'] ]

  - ${{ if eq(parameters['buildType'],'Prerelease')}}:
    - name: Carpenter.Prerelease.Label
      value: $[ dependencies.initializePipeline.outputs['initializeBuildVersion.prereleaseLabel'] ]
  
    - name: Carpenter.Prerelease.Semantic
      value: $[ dependencies.finalizePipeline.outputs['finalizeBuildVersion.prereleaseSemantic'] ]

    - name: Carpenter.Prerelease.Revision
      value: $[ dependencies.finalizePipeline.outputs['finalizeBuildVersion.prereleaseRevision'] ]

  - ${{ if eq(parameters['buildType'],'Release')}}:
    - name: Carpenter.Version.IncrementOnRelease
      value: $[ dependencies.initializePipeline.outputs['initializeBuildVersion.incrementVersionOnRelease'] ]

  - name: Carpenter.Version.Label
    value: $[ dependencies.finalizePipeline.outputs['finalizeBuildVersion.versionLabel'] ]

  - name: Carpenter.Version
    value: $[ dependencies.finalizePipeline.outputs['finalizeBuildVersion.version'] ]
